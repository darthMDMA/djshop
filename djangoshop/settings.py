"""
Django settings for djangoshop project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path
from django.contrib.messages import constants as messages

# Start dotenv
# https://pypi.org/project/python-dotenv/
from dotenv import load_dotenv
# Loading ENV
env_path = Path('.') / '.env'
# env_path = '.env' находится в корневом каталоге проекта
load_dotenv(dotenv_path=env_path)
#End dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-axb3*)_b454q^3fhwxb_0rx6fx5+$vzwf-2x!=ouu&rs2e+^ij'
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*'] #'name.ru, www.name.ru' когда деплоим

INSTALLED_APPS = [
    'django.contrib.admin', # все что связано с админ панелью
    'django.contrib.auth', # все что связано с аутентификацией
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites', # важная библиотека, которая понадобится для других и выводит в админ панели sites
    'django.contrib.staticfiles',
    'debug_toolbar', # дебаг тулбар https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
   # 'channels', # https://channels.readthedocs.io/en/stable/installation.html
    'django.contrib.humanize', # для шаблонов https://docs.djangoproject.com/en/4.1/ref/contrib/humanize/
    # мои приложения
    'blog.apps.BlogConfig',
    'discussions.apps.DiscussionsConfig',
    # установка пакетов
    'taggit', # для тагов https://django-taggit.readthedocs.io/en/latest/getting_started.html
    'django_extensions', # для jupyter # https://gist.github.com/EtsuNDmA/85a20b0b8cf5ec4e12352507b14f9762
    # для авторизации через гугл и гит хаб и др. формы https://django-allauth.readthedocs.io/en/latest/installation.html
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.google',
    # Для отображения красивых форм https://django-crispy-forms.readthedocs.io/en/latest/install.html
    'crispy_forms',
    # Cleanup Должен быть последним https://github.com/un1t/django-cleanup?ysclid=ld4z38aeff981787259
    'django_cleanup.apps.CleanupConfig',
]

# Start debug_toolbar
# https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]
# End debug_toolbar

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware', # для debug_toolbar https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
]

ROOT_URLCONF = 'djangoshop.urls' # сcылка на файл urls моего проекта

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')], # занесли путь к templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db_practice_django_1.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "other_static"),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Start django-crispy-forms
# https://django-crispy-forms.readthedocs.io/en/latest/install.html
CRISPY_TEMPLATE_PACK = 'uni_form'
# End django-crispy-forms

# Start django-allauth
# https://django-allauth.readthedocs.io/en/latest/installation.html
SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'github': {
        'SCOPE': [
            'user',
            'repo',
            'read.org',
        ],
    }
}
# End django-allauth

# Start channels
# https://channels.readthedocs.io/en/stable/installation.html
'''
ASGI_APPLICATION = "djangoshop.routing.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}
'''
# End channels

# Start email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_USER')
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_PASS")
# End email

GOOGLE_RECAPTCHA_SECRET_KEY = os.getenv('GOOGLE_RECAPTCHA_SECRET_KEY')

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert_info',
    messages.WARNING: 'alert_warning',
    messages.ERROR: 'alert_danger',
}

# в производстве убрать потому что не понятно что это
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = 'true'