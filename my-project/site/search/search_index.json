{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"index"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"dev/","text":"","title":"dev"},{"location":"pip/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 mkdocs mkdocs pip install mkdocs mkdocs serve \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 dotenv dotenv pip install dotenv from dotenv import load_dotenv # Loading ENV env_path = Path('.') / '.env' # env_path = '.env' load_dotenv(dotenv_path=env_path) \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-ckeditor django-ckeditor pip install django-ckeditor CKEDITOR_CONFIGS = { 'default': { 'width': 'auto', }, } \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-allauth django-allauth pip install django-allauth \u0432 settings.py INSTALLED_APPS = [ ... 'allauth', 'allauth.account', 'allauth.socialaccount', 'allauth.socialaccount.providers.github', 'allauth.socialaccount.providers.google', ... ] AUTHENTICATION_BACKENDS = [ 'django.contrib.auth.backends.ModelBackend', 'allauth.account.auth_backends.AuthenticationBackend', ] SITE_ID = 1 SOCIALACCOUNT_PROVIDERS = { 'google': { 'APP': { 'client_id': '123', 'secret': '456', 'key': '' } } } \u0432 urls.py urlpatterns = [ ... path('accounts/', include('allauth.urls')), ... ] \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 debug_toolbar debug_toolbar python -m pip install django-debug-toolbar \u0432 settings.py INSTALLED_APPS = [ # ... \"django.contrib.staticfiles\", # ... \"debug_toolbar\", # ... ] STATIC_URL = \"static/\" TEMPLATES = [ { \"BACKEND\": \"django.template.backends.django.DjangoTemplates\", \"APP_DIRS\": True, # ... } ] MIDDLEWARE = [ # ... \"debug_toolbar.middleware.DebugToolbarMiddleware\", # ... ] INTERNAL_IPS = [ # ... \"127.0.0.1\", # ... ] \u0432 urls.py from django.urls import include, path urlpatterns = [ # ... path('__debug__/', include('debug_toolbar.urls')), ] \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 debug_channels channels python -m pip install -U channels \u0432 settings.py ASGI_APPLICATION = \"myproject.asgi.application\" CHANNEL_LAYERS = { \"default\": { \"BACKEND\": \"channels.layers.InMemoryChannelLayer\", }, } \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 jupyter notebook jupyter notebook django-extensions pip install notebook pip install django-extensions \u0432 settings.py INSTALLED_APPS = ( ... 'django_extensions', ) \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-taggit django-taggit pip install django-taggit Add \"taggit\" to your project\u2019s INSTALLED_APPS setting. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 pillow pillow pip install pillow \u041a\u0430\u043a\u043e\u0439 \u0442\u043e \u043a\u043e\u0434 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-cleanup django-cleanup pip install django-cleanup \u041a\u0430\u043a\u043e\u0439 \u0442\u043e \u043a\u043e\u0434","title":"pip install"},{"location":"pip/#mkdocs","text":"mkdocs pip install mkdocs mkdocs serve","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 mkdocs"},{"location":"pip/#dotenv","text":"dotenv pip install dotenv from dotenv import load_dotenv # Loading ENV env_path = Path('.') / '.env' # env_path = '.env' load_dotenv(dotenv_path=env_path)","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 dotenv"},{"location":"pip/#django-ckeditor","text":"django-ckeditor pip install django-ckeditor CKEDITOR_CONFIGS = { 'default': { 'width': 'auto', }, }","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-ckeditor"},{"location":"pip/#django-allauth","text":"django-allauth pip install django-allauth \u0432 settings.py INSTALLED_APPS = [ ... 'allauth', 'allauth.account', 'allauth.socialaccount', 'allauth.socialaccount.providers.github', 'allauth.socialaccount.providers.google', ... ] AUTHENTICATION_BACKENDS = [ 'django.contrib.auth.backends.ModelBackend', 'allauth.account.auth_backends.AuthenticationBackend', ] SITE_ID = 1 SOCIALACCOUNT_PROVIDERS = { 'google': { 'APP': { 'client_id': '123', 'secret': '456', 'key': '' } } } \u0432 urls.py urlpatterns = [ ... path('accounts/', include('allauth.urls')), ... ]","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-allauth"},{"location":"pip/#debug_toolbar","text":"debug_toolbar python -m pip install django-debug-toolbar \u0432 settings.py INSTALLED_APPS = [ # ... \"django.contrib.staticfiles\", # ... \"debug_toolbar\", # ... ] STATIC_URL = \"static/\" TEMPLATES = [ { \"BACKEND\": \"django.template.backends.django.DjangoTemplates\", \"APP_DIRS\": True, # ... } ] MIDDLEWARE = [ # ... \"debug_toolbar.middleware.DebugToolbarMiddleware\", # ... ] INTERNAL_IPS = [ # ... \"127.0.0.1\", # ... ] \u0432 urls.py from django.urls import include, path urlpatterns = [ # ... path('__debug__/', include('debug_toolbar.urls')), ]","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 debug_toolbar"},{"location":"pip/#debug_channels","text":"channels python -m pip install -U channels \u0432 settings.py ASGI_APPLICATION = \"myproject.asgi.application\" CHANNEL_LAYERS = { \"default\": { \"BACKEND\": \"channels.layers.InMemoryChannelLayer\", }, }","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 debug_channels"},{"location":"pip/#jupyter-notebook","text":"jupyter notebook django-extensions pip install notebook pip install django-extensions \u0432 settings.py INSTALLED_APPS = ( ... 'django_extensions', )","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 jupyter notebook"},{"location":"pip/#django-taggit","text":"django-taggit pip install django-taggit Add \"taggit\" to your project\u2019s INSTALLED_APPS setting.","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-taggit"},{"location":"pip/#pillow","text":"pillow pip install pillow \u041a\u0430\u043a\u043e\u0439 \u0442\u043e \u043a\u043e\u0434","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 pillow"},{"location":"pip/#django-cleanup","text":"django-cleanup pip install django-cleanup \u041a\u0430\u043a\u043e\u0439 \u0442\u043e \u043a\u043e\u0434","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 django-cleanup"},{"location":"settings/","text":"","title":"settings"},{"location":"blog/models/","text":"","title":"Models"},{"location":"blog/templates/","text":"","title":"Templates"},{"location":"blog/urls/","text":"","title":"Urls"},{"location":"blog/view/","text":"","title":"View"}]}